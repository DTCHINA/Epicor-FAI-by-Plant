'//**************************************************
'// Custom VB.NET code for JobEntryForm
'// Created: 5/6/2010 2:39:50 PM
'//**************************************************
Imports System
Imports System.Data
Imports System.Diagnostics
Imports System.Windows.Forms
Imports System.ComponentModel
Imports Microsoft.VisualBasic
Imports Epicor.Mfg.UI
Imports Epicor.Mfg.UI.FrameWork
Imports Epicor.Mfg.UI.ExtendedProps
Imports Epicor.Mfg.UI.FormFunctions
Imports Epicor.Mfg.UI.Customization
Imports Epicor.Mfg.UI.Adapters
Imports Epicor.Mfg.UI.Searches
Imports Epicor.Mfg.BO
Imports Infragistics.Win.UltraWinGrid

Module Script 


	'// ** Wizard Insert Location - Do Not Remove 'Begin/End Wizard Added Module Level Variables' Comments! ** 
	'// Begin Wizard Added Module Level Variables ** 
		
	'// End Wizard Added Module Level Variables ** 

	'// Add Custom Module Level Variables Here ** 


	Sub InitializeCustomCode() 


		'// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Variable Intialization' lines ** 
		'// Begin Wizard Added Variable Intialization 

			AddHandler Script.JobHead_Column.ColumnChanging, AddressOf Script.JobHead_AfterFieldChange

		'// End Wizard Added Variable Intialization 
		'// Begin Custom Method Calls 

		
		CreateRowRuleJobHeadShortChar01NotEqual_Constant_NullValue()
		'// End Custom Method Calls 
	End Sub 



	Sub DestroyCustomCode() 


		'// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Object Disposal' lines ** 
		'// Begin Wizard Added Object Disposal 

		RemoveHandler Script.JobHead_Column.ColumnChanging, AddressOf Script.JobHead_AfterFieldChange
				'// End Wizard Added Object Disposal 
		'// Begin Custom Code Disposal 

		'// End Custom Code Disposal 
	End Sub 

Private Sub FAI_TRAP

	Dim EDVJobHead As EpiDataView = CType(oTrans.EpiDataViews("JobHead"), EpiDataView)
	Dim ReleaseTrap As Boolean = EDVJobHead.dataView(EDVJobHead.Row)("JobReleased")

	oTrans.PushStatusText("Phase......1",false)

	If ReleaseTrap = True then 
		MessageBox.show("test")
	End If

End Sub


	Private Sub JobHead_AfterFieldChange(ByVal sender As Object, ByVal args As DataColumnChangeEventArgs)
		' ** Argument Properties and Uses **
		' args.Row("FieldName")
		' args.Column, args.ProposedValue, args.Row
		' Add Event Handler Code
'		Select Case args.Column.ColumnName
'	
'			Case "JobReleased"
'			'FAI_Trap()
'		End Select
'			FAI_Trap()
	End Sub

	



	




	Private Sub CreateRowRuleJobHeadShortChar01NotEqual_Constant_NullValue()
		' Description: FAI
		' **** begin autogenerated code ****
		Dim okJobHead_ShortChar01 As RuleAction = RuleAction.AddControlSettings(Script.oTrans, "JobHead.ShortChar01", SettingStyle.OK)
		Dim ruleActions() As RuleAction = New RuleAction() {okJobHead_ShortChar01}
		' Create RowRule and add to the EpiDataView.
		Dim rrCreateRowRuleJobHeadShortChar01NotEqual_Constant_NullValue As RowRule = New RowRule("JobHead.ShortChar01", RuleCondition.NotEqual, "Constant: NullValue", ruleActions)
		CType(Script.oTrans.EpiDataViews("JobHead"),EpiDataView).AddRowRule(rrCreateRowRuleJobHeadShortChar01NotEqual_Constant_NullValue)
		' **** end autogenerated code ****
	End Sub

End Module 
